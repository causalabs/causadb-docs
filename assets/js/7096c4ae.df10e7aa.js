"use strict";(self.webpackChunkcausadb_docs=self.webpackChunkcausadb_docs||[]).push([[9538],{293:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>d});var o=t(5893),s=t(1151);const c={},i="Optimal Actions",r={id:"reference/python/Model/optimal_actions",title:"Optimal Actions",description:"Get the optimal actions for a given set of target outcomes.",source:"@site/docs/reference/python/Model/optimal_actions.md",sourceDirName:"reference/python/Model",slug:"/reference/python/Model/optimal_actions",permalink:"/docs/reference/python/Model/optimal_actions",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/python/Model/optimal_actions.md",tags:[],version:"current",frontMatter:{},sidebar:"referenceSidebar",previous:{title:"Get Nodes",permalink:"/docs/reference/python/Model/get_nodes"},next:{title:"Remove",permalink:"/docs/reference/python/Model/remove"}},a={},d=[];function l(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"optimal-actions",children:"Optimal Actions"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"def optimal_actions(target_outcomes: dict[str, float],\n                    actionable_nodes: list[str],\n                    condition_nodes: dict[str, float] = \\{\\}) -> dict\n"})}),"\n",(0,o.jsx)(n.p,{children:"Get the optimal actions for a given set of target outcomes."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"target_outcomes"})," ",(0,o.jsx)(n.em,{children:"dict[str, float]"})," - A dictionary of target outcomes."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"actionable_nodes"})," ",(0,o.jsx)(n.em,{children:"list[str]"})," - A list of actionable nodes."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"condition_nodes"})," ",(0,o.jsx)(n.em,{children:"dict[str, float]"})," - A dictionary of condition nodes."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"dict"})," - A dictionary representing the optimal actions."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:'model.optimal_actions(\n...     {"x": 0.5},\n...     ["y"],\n...     {"z": 0.5}\n... )'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)("a",{id:"causadb"}),"\n",(0,o.jsx)(n.h1,{id:"causadb",children:"causadb"}),"\n",(0,o.jsx)("a",{id:"causadb.CausaDB"})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>i});var o=t(7294);const s={},c=o.createContext(s);function i(e){const n=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(c.Provider,{value:n},e.children)}}}]);