"use strict";(self.webpackChunkcausadb_docs=self.webpackChunkcausadb_docs||[]).push([[3150],{3356:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>l});var s=t(5893),o=t(1151);const c={},r="Find Best Actions",i={id:"reference/python/Model/find_best_actions",title:"Find Best Actions",description:"Get the optimal actions for a given set of target outcomes.",source:"@site/docs/reference/python/Model/find_best_actions.md",sourceDirName:"reference/python/Model",slug:"/reference/python/Model/find_best_actions",permalink:"/docs/reference/python/Model/find_best_actions",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/python/Model/find_best_actions.md",tags:[],version:"current",frontMatter:{},sidebar:"referenceSidebar",previous:{title:"Detach",permalink:"/docs/reference/python/Model/detach"},next:{title:"Get Edges",permalink:"/docs/reference/python/Model/get_edges"}},d={},l=[];function a(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"find-best-actions",children:"Find Best Actions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"@validate_call\ndef find_best_actions(targets: dict[str, float],\n                      actionable: list[str],\n                      fixed: dict[str, float] = \\{\\}) -> dict\n"})}),"\n",(0,s.jsx)(n.p,{children:"Get the optimal actions for a given set of target outcomes."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"targets"})," ",(0,s.jsx)(n.em,{children:"dict[str, float]"})," - A dictionary representing the target outcomes."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"actionable"})," ",(0,s.jsx)(n.em,{children:"list[str]"})," - A list of actionable nodes."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fixed"})," ",(0,s.jsx)(n.em,{children:"dict[str, float]"})," - A dictionary representing the fixed nodes."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"dict"})," - A dictionary representing the optimal actions."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:'model.optimal_actions(\n...     {"x": 0.5},\n...     ["x"],\n...     {"y": 0.5}'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("a",{id:"model.Model.causal_attributions"})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>r});var s=t(7294);const o={},c=s.createContext(o);function r(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);