"use strict";(self.webpackChunkcausadb_docs=self.webpackChunkcausadb_docs||[]).push([[356],{4750:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var t=o(5893),a=o(1151);const s={sidebar_position:1},i="Model Deployment",d={id:"guide/causadb/deployment",title:"Model Deployment",description:"Model deployment is the process of making a trained causal model available for use in other systems, either through the REST API or supported client libraries.",source:"@site/docs/guide/causadb/deployment.md",sourceDirName:"guide/causadb",slug:"/guide/causadb/deployment",permalink:"/docs/guide/causadb/deployment",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guide/causadb/deployment.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"guideSidebar",previous:{title:"Data Sources",permalink:"/docs/guide/causadb/datasources"},next:{title:"Organisations",permalink:"/docs/guide/causadb/organisations"}},r={},c=[];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"model-deployment",children:"Model Deployment"}),"\n",(0,t.jsx)(n.p,{children:"Model deployment is the process of making a trained causal model available for use in other systems, either through the REST API or supported client libraries."}),"\n",(0,t.jsx)(n.p,{children:"As a cloud-native platform, CausaDB models are designed to be deployment-ready out of the box. This means that once a model is trained, it can be used immediately in your applications."}),"\n",(0,t.jsx)(n.p,{children:"Once a model has been created, defined, and trained, as below (in Python):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'model = client.create_model("my-new-model")\n...\nmodel.train("my-data-name")\n'})}),"\n",(0,t.jsxs)(n.p,{children:["It can be accessed by name in deployment. This is usually in a new session, or in a different application. To access a model by name in Python, use the ",(0,t.jsx)(n.code,{children:"get_model"})," method:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'model = client.get_model("my-new-model")\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"CausaDB will soon support model versioning, allowing you to keep track of changes to your model over time. This is useful for auditing, debugging, and for managing multiple versions of a model in production."})})]})}function u(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>d,a:()=>i});var t=o(7294);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);